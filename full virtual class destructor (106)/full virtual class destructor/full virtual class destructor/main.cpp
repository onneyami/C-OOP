#include <iostream>
#include <string>

using namespace std;

//Чисто виртуальный деструктор c++. Наследование. Полиморфизм

class A{
public:
    A(){
        
    }
    
    virtual ~A() = 0;    //в самом абстрактном классе приравниваем к нулю, как и чисто виртуальную функцию, НО
};

A:: ~A() {};     //но ОБЯЗАТЕЛЬНО нужно вынести вне абстрактного класса и в фигурных скобках оставить пустоту

class B : public A{
public:
    B(){
        
    }
    
    ~B() override {
        
    }
};

int main() {
    setlocale(LC_ALL, "RU");
    
    
    return 0;
}

// класс, в котором создаем чисто виртуальный деструктор также, как и с чисто виртуальной функцией, становится абстрактным классом

